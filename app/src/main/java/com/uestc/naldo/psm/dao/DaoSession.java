package com.uestc.naldo.psm.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.uestc.naldo.psm.model.Admin;
import com.uestc.naldo.psm.model.Attendance;
import com.uestc.naldo.psm.model.Notification;
import com.uestc.naldo.psm.model.Owner;
import com.uestc.naldo.psm.model.Pet;
import com.uestc.naldo.psm.model.Trainer;
import com.uestc.naldo.psm.model.Course;
import com.uestc.naldo.psm.model.Feedback;
import com.uestc.naldo.psm.model.School;

import com.uestc.naldo.psm.dao.AdminDao;
import com.uestc.naldo.psm.dao.AttendanceDao;
import com.uestc.naldo.psm.dao.NotificationDao;
import com.uestc.naldo.psm.dao.OwnerDao;
import com.uestc.naldo.psm.dao.PetDao;
import com.uestc.naldo.psm.dao.TrainerDao;
import com.uestc.naldo.psm.dao.CourseDao;
import com.uestc.naldo.psm.dao.FeedbackDao;
import com.uestc.naldo.psm.dao.SchoolDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig adminDaoConfig;
    private final DaoConfig attendanceDaoConfig;
    private final DaoConfig notificationDaoConfig;
    private final DaoConfig ownerDaoConfig;
    private final DaoConfig petDaoConfig;
    private final DaoConfig trainerDaoConfig;
    private final DaoConfig courseDaoConfig;
    private final DaoConfig feedbackDaoConfig;
    private final DaoConfig schoolDaoConfig;

    private final AdminDao adminDao;
    private final AttendanceDao attendanceDao;
    private final NotificationDao notificationDao;
    private final OwnerDao ownerDao;
    private final PetDao petDao;
    private final TrainerDao trainerDao;
    private final CourseDao courseDao;
    private final FeedbackDao feedbackDao;
    private final SchoolDao schoolDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        adminDaoConfig = daoConfigMap.get(AdminDao.class).clone();
        adminDaoConfig.initIdentityScope(type);

        attendanceDaoConfig = daoConfigMap.get(AttendanceDao.class).clone();
        attendanceDaoConfig.initIdentityScope(type);

        notificationDaoConfig = daoConfigMap.get(NotificationDao.class).clone();
        notificationDaoConfig.initIdentityScope(type);

        ownerDaoConfig = daoConfigMap.get(OwnerDao.class).clone();
        ownerDaoConfig.initIdentityScope(type);

        petDaoConfig = daoConfigMap.get(PetDao.class).clone();
        petDaoConfig.initIdentityScope(type);

        trainerDaoConfig = daoConfigMap.get(TrainerDao.class).clone();
        trainerDaoConfig.initIdentityScope(type);

        courseDaoConfig = daoConfigMap.get(CourseDao.class).clone();
        courseDaoConfig.initIdentityScope(type);

        feedbackDaoConfig = daoConfigMap.get(FeedbackDao.class).clone();
        feedbackDaoConfig.initIdentityScope(type);

        schoolDaoConfig = daoConfigMap.get(SchoolDao.class).clone();
        schoolDaoConfig.initIdentityScope(type);

        adminDao = new AdminDao(adminDaoConfig, this);
        attendanceDao = new AttendanceDao(attendanceDaoConfig, this);
        notificationDao = new NotificationDao(notificationDaoConfig, this);
        ownerDao = new OwnerDao(ownerDaoConfig, this);
        petDao = new PetDao(petDaoConfig, this);
        trainerDao = new TrainerDao(trainerDaoConfig, this);
        courseDao = new CourseDao(courseDaoConfig, this);
        feedbackDao = new FeedbackDao(feedbackDaoConfig, this);
        schoolDao = new SchoolDao(schoolDaoConfig, this);

        registerDao(Admin.class, adminDao);
        registerDao(Attendance.class, attendanceDao);
        registerDao(Notification.class, notificationDao);
        registerDao(Owner.class, ownerDao);
        registerDao(Pet.class, petDao);
        registerDao(Trainer.class, trainerDao);
        registerDao(Course.class, courseDao);
        registerDao(Feedback.class, feedbackDao);
        registerDao(School.class, schoolDao);
    }
    
    public void clear() {
        adminDaoConfig.clearIdentityScope();
        attendanceDaoConfig.clearIdentityScope();
        notificationDaoConfig.clearIdentityScope();
        ownerDaoConfig.clearIdentityScope();
        petDaoConfig.clearIdentityScope();
        trainerDaoConfig.clearIdentityScope();
        courseDaoConfig.clearIdentityScope();
        feedbackDaoConfig.clearIdentityScope();
        schoolDaoConfig.clearIdentityScope();
    }

    public AdminDao getAdminDao() {
        return adminDao;
    }

    public AttendanceDao getAttendanceDao() {
        return attendanceDao;
    }

    public NotificationDao getNotificationDao() {
        return notificationDao;
    }

    public OwnerDao getOwnerDao() {
        return ownerDao;
    }

    public PetDao getPetDao() {
        return petDao;
    }

    public TrainerDao getTrainerDao() {
        return trainerDao;
    }

    public CourseDao getCourseDao() {
        return courseDao;
    }

    public FeedbackDao getFeedbackDao() {
        return feedbackDao;
    }

    public SchoolDao getSchoolDao() {
        return schoolDao;
    }

}
